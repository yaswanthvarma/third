
Initialization:
--------------
git init

git config --global --edit   // to edit the git config, you can add username, email etc


git status


git remote -v      // to list the remote repository that is connected to
git remote add origin <URL>   // to add a remote repository  (origin is an alias for the repo URL)
git remote set-url origin <URL>  // to change the remote repository



Modification:
------------
git add .   // to add files from Working directory to staging
git rm --cached <file>     //to unstage files from staging to working Dir
git reset HEAD <FILENAME> //to unstage files from staging to working Dir



git commit -m "comments"    //to commit files to local repository

git reset --soft HEAD~1  // opposite of the “git add” command, adding files back to the working directory



git push -u origin <BRANCH_NAME>    // to push the changes from local repository to remote repository



# 
Git undo
---------
git reset
   soft
   mixed
   hard
git revert
         git revert <ID>



git clone means you are making a copy of the repository in your system.
git fork means you are copying the repository to your Github account.
git pull means you are fetching the last modified repository.
git push means you are returning the repository after modifying it.

In layman's term:  git clone is downloading and git pull is refreshing.


#
.gitignore


#git branching
git branch --list
git branch <BRANCH_NAME>          // to create  a new branch 
git checkout <BRANCH_NAME>     //  switch to another branch


git branch -d <BRANCH_NAME>  //to delete a branch



#
git branching strategies




#
merging
whenever you want to merge B1  to B2,  checkout to B1 & merge B2

git merge <BRANCH_NAME>

#
merging strategies
fast-forward
recurssive strategy
     --squash option   (git merge --squash <BRANCH_NAME>)   //combining multiple commits into single commit using squash option
rebase   //gives more clarity on Development history

cherry-pick   //pick only particular commit from a branch and merge it to another branch







#
Git tagging
git tag -l               // to list tags
git tag -a v1.0 -m "my release version 1.0"
git tag -d <TAG_NAME>   // delete a tag


#
Github organization account

#
Branch protection rules








URLS:
https://opensource.com/article/19/7/create-pull-request-github


-how to undo a recent commit from local repository.
-how to undo a recent push from a remote repository.
- You have merged a branch to master by mistake,  how do you undo it?


reachyaswanth@gmail.com



